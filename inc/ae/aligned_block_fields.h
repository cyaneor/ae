/**
 * @file aligned_block_fields.h
 * @brief Определение макроса для работы с выровненными блоками памяти.
 *
 * Этот файл содержит макрос AE_ALIGNED_BLOCK_FIELDS, который позволяет
 * определять структуры, содержащие поля для управления выровненными блоками памяти.
 * Он расширяет базовые поля блока памяти, добавляя информацию о размере выравнивания.
 */

#ifndef AE_ALIGNED_BLOCK_FIELDS_H
#define AE_ALIGNED_BLOCK_FIELDS_H

#include "memory_block_fields.h"

/**
 * @def AE_ALIGNED_BLOCK_FIELDS(T)
 * @brief Макрос для определения полей выровненного блока памяти.
 *
 * Этот макрос расширяет структуру, добавляя поля блока памяти и размер выравнивания.
 * Он используется для определения структуры, которая содержит информацию
 * о выровненном блоке памяти для типа данных T.
 *
 * @param T Тип данных, для которого создаются поля выровненного блока памяти.
 *
 * Макрос включает в себя:
 * - Поля, определенные в AE_MEMORY_BLOCK_FIELDS(T)
 * - Дополнительное поле alignment_size для хранения размера выравнивания
 *
 * Пример использования:
 * @code{.c}
 * struct AlignedDoubleBlock {
 *     AE_ALIGNED_BLOCK_FIELDS(double);
 * };
 * @endcode
 *
 * В этом примере создается структура AlignedDoubleBlock,
 * которая включает в себя поля блока памяти и размер
 * выравнивания для типа double.
 *
 * @note Размер выравнивания важен для оптимизации доступа к памяти
 *       и соответствия требованиям аппаратной архитектуры.
 *
 * @see AE_MEMORY_BLOCK_FIELDS
 */
#define AE_ALIGNED_BLOCK_FIELDS(T)                                                                 \
    AE_MEMORY_BLOCK_FIELDS(T);                                                                     \
    ae_usize_t alignment_size

#endif // AE_ALIGNED_BLOCK_FIELDS_H
