/**
 * @file numeric_fixed_limits.h
 * @brief Определяет размеры и предельные значения
 *        для различных целочисленных типов.
 *
 * Этот заголовочный файл предоставляет набор макросов,
 * которые определяют размер (в байтах) и минимальные
 * и максимальные значения для различных типов целых чисел,
 * включая знаковые и беззнаковые целые числа размером 8, 16, 32 и 64 бита.
 *
 * Для каждого целочисленного типа определён макрос, задающий:
 * - Размер в байтах (`AE_<type>_T_SIZE`), например, `AE_U8_T_SIZE`.
 * - Минимальное значение (`AE_<type>_T_MIN`), например, `AE_U8_T_MIN`.
 * - Максимальное значение (`AE_<type>_T_MAX`), например, `AE_U8_T_MAX`.
 *
 * Эти макросы можно использовать для стандартизации и упрощения работы
 * с числовыми пределами в проекте, делая код более читаемым и удобным для поддержки.
 *
 * Макросы сопоставляются с соответствующими платформозависимыми или определёнными в библиотеке
 * макросами, такими как `AE_CHAR_T_SIZE` или `AE_SCHAR_T_MIN`, чтобы обеспечить согласованные
 * размеры и предельные значения типов на разных платформах.
 */

#ifndef AE_NUMERIC_FIXED_LIMITS_H
#define AE_NUMERIC_FIXED_LIMITS_H

#include "numeric_limits.h"

/**
 * @def AE_U8_T_SIZE
 * @brief Размер 8-битного беззнакового целого числа в байтах.
 *
 * Этот макрос определяет размер 8-битного беззнакового целого числа (`ae_u8_t`),
 * который эквивалентен `AE_CHAR_T_SIZE`.
 */
#define AE_U8_T_SIZE AE_CHAR_T_SIZE

/**
 * @def AE_U8_T_MIN
 * @brief Минимальное значение для 8-битного беззнакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 8-битного беззнакового целого числа (`ae_u8_t`),
 * которое эквивалентно `AE_UCHAR_T_MIN`.
 */
#define AE_U8_T_MIN AE_UCHAR_T_MIN

/**
 * @def AE_U8_T_MAX
 * @brief Максимальное значение для 8-битного беззнакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 8-битного беззнакового целого числа (`ae_u8_t`),
 * которое эквивалентно `AE_UCHAR_T_MAX`.
 */
#define AE_U8_T_MAX AE_UCHAR_T_MAX

/**
 * @def AE_S8_T_SIZE
 * @brief Размер 8-битного знакового целого числа в байтах.
 *
 * Этот макрос определяет размер 8-битного знакового целого числа (`ae_s8_t`),
 * который эквивалентен `AE_CHAR_T_SIZE`.
 */
#define AE_S8_T_SIZE AE_CHAR_T_SIZE

/**
 * @def AE_S8_T_MIN
 * @brief Минимальное значение для 8-битного знакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 8-битного знакового целого числа (`ae_s8_t`),
 * которое эквивалентно `AE_SCHAR_T_MIN`.
 */
#define AE_S8_T_MIN AE_SCHAR_T_MIN

/**
 * @def AE_S8_T_MAX
 * @brief Максимальное значение для 8-битного знакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 8-битного знакового целого числа (`ae_s8_t`),
 * которое эквивалентно `AE_SCHAR_T_MAX`.
 */
#define AE_S8_T_MAX AE_SCHAR_T_MAX

/**
 * @def AE_U16_T_SIZE
 * @brief Размер 16-битного беззнакового целого числа в байтах.
 *
 * Этот макрос определяет размер 16-битного беззнакового целого числа (`ae_u16_t`),
 * который эквивалентен `AE_SHORT_T_SIZE`.
 */
#define AE_U16_T_SIZE AE_SHORT_T_SIZE

/**
 * @def AE_U16_T_MIN
 * @brief Минимальное значение для 16-битного беззнакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 16-битного беззнакового целого числа (`ae_u16_t`),
 * которое эквивалентно `AE_USHORT_T_MIN`.
 */
#define AE_U16_T_MIN AE_USHORT_T_MIN

/**
 * @def AE_U16_T_MAX
 * @brief Максимальное значение для 16-битного беззнакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 16-битного беззнакового целого числа (`ae_u16_t`),
 * которое эквивалентно `AE_USHORT_T_MAX`.
 */
#define AE_U16_T_MAX AE_USHORT_T_MAX

/**
 * @def AE_S16_T_SIZE
 * @brief Размер 16-битного знакового целого числа в байтах.
 *
 * Этот макрос определяет размер 16-битного знакового целого числа (`ae_s16_t`),
 * который эквивалентен `AE_SHORT_T_SIZE`.
 */
#define AE_S16_T_SIZE AE_SHORT_T_SIZE

/**
 * @def AE_S16_T_MIN
 * @brief Минимальное значение для 16-битного знакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 16-битного знакового целого числа (`ae_s16_t`),
 * которое эквивалентно `AE_SSHORT_T_MIN`.
 */
#define AE_S16_T_MIN AE_SSHORT_T_MIN

/**
 * @def AE_S16_T_MAX
 * @brief Максимальное значение для 16-битного знакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 16-битного знакового целого числа (`ae_s16_t`),
 * которое эквивалентно `AE_SSHORT_T_MAX`.
 */
#define AE_S16_T_MAX AE_SSHORT_T_MAX

/**
 * @def AE_U32_T_SIZE
 * @brief Размер 32-битного беззнакового целого числа в байтах.
 *
 * Этот макрос определяет размер 32-битного беззнакового целого числа (`ae_u32_t`),
 * который эквивалентен `AE_INT_T_SIZE`.
 */
#define AE_U32_T_SIZE AE_INT_T_SIZE

/**
 * @def AE_U32_T_MIN
 * @brief Минимальное значение для 32-битного беззнакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 32-битного беззнакового целого числа (`ae_u32_t`),
 * которое эквивалентно `AE_UINT_T_MIN`.
 */
#define AE_U32_T_MIN AE_UINT_T_MIN

/**
 * @def AE_U32_T_MAX
 * @brief Максимальное значение для 32-битного беззнакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 32-битного беззнакового целого числа (`ae_u32_t`),
 * которое эквивалентно `AE_UINT_T_MAX`.
 */
#define AE_U32_T_MAX AE_UINT_T_MAX

/**
 * @def AE_S32_T_SIZE
 * @brief Размер 32-битного знакового целого числа в байтах.
 *
 * Этот макрос определяет размер 32-битного знакового целого числа (`ae_s32_t`),
 * который эквивалентен `AE_INT_T_SIZE`.
 */
#define AE_S32_T_SIZE AE_INT_T_SIZE

/**
 * @def AE_S32_T_MIN
 * @brief Минимальное значение для 32-битного знакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 32-битного знакового целого числа (`ae_s32_t`),
 * которое эквивалентно `AE_SINT_T_MIN`.
 */
#define AE_S32_T_MIN AE_SINT_T_MIN

/**
 * @def AE_S32_T_MAX
 * @brief Максимальное значение для 32-битного знакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 32-битного знакового целого числа (`ae_s32_t`),
 * которое эквивалентно `AE_SINT_T_MAX`.
 */
#define AE_S32_T_MAX AE_SINT_T_MAX

/**
 * @def AE_U64_T_SIZE
 * @brief Размер 64-битного беззнакового целого числа в байтах.
 *
 * Этот макрос определяет размер 64-битного беззнакового целого числа (`ae_u64_t`),
 * который эквивалентен `AE_LLONG_T_SIZE`.
 */
#define AE_U64_T_SIZE AE_LLONG_T_SIZE

/**
 * @def AE_U64_T_MIN
 * @brief Минимальное значение для 64-битного беззнакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 64-битного беззнакового целого числа (`ae_u64_t`),
 * которое эквивалентно `AE_ULLONG_T_MIN`.
 */
#define AE_U64_T_MIN AE_ULLONG_T_MIN

/**
 * @def AE_U64_T_MAX
 * @brief Максимальное значение для 64-битного беззнакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 64-битного беззнакового целого числа (`ae_u64_t`),
 * которое эквивалентно `AE_ULLONG_T_MAX`.
 */
#define AE_U64_T_MAX AE_ULLONG_T_MAX

/**
 * @def AE_S64_T_SIZE
 * @brief Размер 64-битного знакового целого числа в байтах.
 *
 * Этот макрос определяет размер 64-битного знакового целого числа (`ae_s64_t`),
 * который эквивалентен `AE_LLONG_T_SIZE`.
 */
#define AE_S64_T_SIZE AE_LLONG_T_SIZE

/**
 * @def AE_S64_T_MIN
 * @brief Минимальное значение для 64-битного знакового целого числа.
 *
 * Этот макрос определяет минимально возможное значение
 * для 64-битного знакового целого числа (`ae_s64_t`),
 * которое эквивалентно `AE_SLLONG_T_MIN`.
 */
#define AE_S64_T_MIN AE_SLLONG_T_MIN

/**
 * @def AE_S64_T_MAX
 * @brief Максимальное значение для 64-битного знакового целого числа.
 *
 * Этот макрос определяет максимально возможное значение
 * для 64-битного знакового целого числа (`ae_s64_t`),
 * которое эквивалентно `AE_SLLONG_T_MAX`.
 */
#define AE_S64_T_MAX AE_SLLONG_T_MAX

#endif // AE_NUMERIC_FIXED_LIMITS_H
