/**
 * @file range_initializer.h
 * @brief Заголовочный файл, содержащий макрос
 *        для инициализации диапазона с нижней и верхней границей.
 *
 * Этот файл предоставляет макрос @ref ae_range_initializer, который используется для инициализации
 * диапазона с двумя значениями: нижней границей `lower` и верхней границей `upper`.
 *
 * Макрос также поддерживает передачу дополнительных аргументов через переменную длину (`...`),
 * что позволяет гибко инициализировать диапазоны с дополнительными параметрами.
 *
 * Макрос @ref ae_range_initializer является оберткой для макроса @ref ae_interval_initializer,
 * который выполняет основную инициализацию интервала. Это позволяет использовать тот же механизм
 * инициализации как для интервалов, так и для диапазонов, обеспечивая совместимость и удобство
 * использования.
 */

#ifndef AE_RANGE_INITIALIZER_H
#define AE_RANGE_INITIALIZER_H

#include "interval_initializer.h"

/**
 * @def ae_range_initializer(lower, upper, ...)
 * @brief Макрос для инициализации диапазона с нижней и верхней границей.
 *
 * Этот макрос используется для инициализации диапазона с двумя значениями:
 * нижней границей `lower` и верхней границей `upper`.
 *
 * Он также поддерживает передачу дополнительных аргументов через переменную длину (`...`),
 * что позволяет гибко инициализировать диапазоны с дополнительными параметрами.
 *
 * Макрос `ae_range_initializer` является оберткой для макроса @ref ae_interval_initializer,
 * который выполняет основную инициализацию интервала. Это позволяет использовать тот же
 * механизм инициализации для диапазонов, сохраняя совместимость с интервалами.
 *
 * @param lower Значение для нижней границы диапазона.
 * @param upper Значение для верхней границы диапазона.
 * @param ... Дополнительные аргументы, которые могут быть переданы макросу
 *            `ae_interval_initializer` для более сложной инициализации.
 *
 * @note Диапазоны, создаваемые с использованием данного макроса, могут быть инициализированы
 *       с дополнительными параметрами, такими как метаданные или флаги, которые могут быть
 *       полезны в различных случаях. Убедитесь, что переданные аргументы соответствуют
 *       ожидаемым типам и количеству.
 *
 * Пример использования:
 * @code
 * ae_range_type(IntRange, int);
 * IntRange range = ae_range_initializer(0, 10);
 * @endcode
 */
#define ae_range_initializer(lower, upper, ...) ae_interval_initializer(lower, upper, __VA_ARGS__)

#endif // AE_RANGE_INITIALIZER_H
