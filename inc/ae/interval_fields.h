/**
 * @file interval_fields.h
 * @brief Заголовочный файл, содержащий макрос для создания полей интервала с заданным типом.
 *
 * Этот файл определяет макрос @ref AE_INTERVAL_FIELDS,
 * который генерирует два поля в структуре для представления интервала:
 * одно для нижней границы (`lower`) и другое для верхней границы (`upper`).
 *
 * Поля имеют тип данных, указанный в параметре макроса `T`.
 * Это позволяет использовать макрос для создания структур,
 * представляющих интервалы с различными типами данных,
 * такими как `int`, `float`, `double` и другие.
 *
 * Макрос полезен при работе с интервалами в математических вычислениях,
 * обработке данных и других задачах, где требуется представление интервалов.
 */

#ifndef AE_INTERVAL_FIELDS_H
#define AE_INTERVAL_FIELDS_H

/**
 * @def AE_INTERVAL_FIELDS(T)
 * @brief Макрос для создания полей интервала с заданным типом.
 *
 * Этот макрос генерирует два поля для представления интервала:
 * одно для нижней границы интервала (`lower`) и другое для верхней границы интервала (`upper`).
 * Оба поля имеют тип `T`, который может быть любым типом данных, таким как `int`, `float`,
 * или другой.
 *
 * @param T Тип данных для границ интервала.
 *          Например, `int`, `float`, `double` и другие.
 *
 * @note Макрос позволяет создавать структуры, которые могут представлять интервалы
 *       для разных типов данных, обеспечивая удобство работы с ними в коде.
 *
 * Пример использования макроса
 * @code
 * typedef struct {
 *     AE_INTERVAL_FIELDS(int)
 * } IntInterval;
 *
 * IntInterval interval;
 * interval.lower = 0;
 * interval.upper = 10;
 * @endcode
 */
#define AE_INTERVAL_FIELDS(T)                                                                      \
    T lower;                                                                                       \
    T upper

#endif // AE_INTERVAL_FIELDS_H
