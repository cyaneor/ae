/**
 * @file intptr.h
 * @brief Заголовочный файл, который определяет макросы и типы
 *        для арифметики указателей на основе архитектуры системы.
 *
 * Этот файл содержит макросы и определения типов,
 * которые упрощают арифметику указателей на различных архитектурах,
 * абстрагируя знаковые и беззнаковые типы указателей в зависимости
 * от размера указателя, определенного макросом AE_INTPTR_T_SIZE.
 */

#ifndef AE_INTPTR_H
#define AE_INTPTR_H

#include "numeric.h"

/**
 * @cond AE_INTPTR_T_SIZE_CHECK
 * Внутренний условный блок для проверки значения AE_INTPTR_T_SIZE.
 * @endcond
 */
#if AE_INTPTR_T_SIZE == 8
/**
 * @def AE_SINTPTR_T_MIN
 * @brief Макрос для определения минимального значения знакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот макрос задает минимальное значение, которое может принимать знаковый указатель,
 * соответствующее минимальному значению знакового длинного целого.
 */
#    define AE_SINTPTR_T_MIN AE_S64_T_MIN

/**
 * @def AE_SINTPTR_T_MAX
 * @brief Макрос для определения максимального значения знакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот макрос задает максимальное значение, которое может принимать знаковый указатель,
 * соответствующее максимальному значению знакового длинного целого.
 */
#    define AE_SINTPTR_T_MAX AE_S64_T_MAX

/**
 * @def AE_UINTPTR_T_MIN
 * @brief Макрос для определения минимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот макрос задает минимальное значение, которое может принимать беззнаковый указатель,
 * обычно это ноль, соответствующий минимальному значению беззнакового длинного целого.
 */
#    define AE_UINTPTR_T_MIN AE_U64_T_MIN

/**
 * @def AE_UINTPTR_T_MAX
 * @brief Макрос для определения максимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот макрос задает максимальное значение, которое может принимать беззнаковый указатель,
 * соответствующее максимальному значению беззнакового длинного целого.
 */
#    define AE_UINTPTR_T_MAX AE_U64_T_MAX

/**
 * @typedef ae_sintptr_t
 * @brief Определение типа для знакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот тип определен для абстракции операций арифметики знаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_s64_t ae_sintptr_t;

/**
 * @typedef ae_uintptr_t
 * @brief Определение типа для беззнакового типа указателя.
 *        Предполагается размер указателя 64 бита.
 *
 * Этот тип определен для абстракции операций арифметики беззнаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_u64_t ae_uintptr_t;

#elif AE_INTPTR_T_SIZE == 4
/**
 * @def AE_SINTPTR_T_MIN
 * @brief Макрос для определения минимального значения знакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот макрос задает минимальное значение, которое может принимать знаковый указатель,
 * соответствующее минимальному значению знакового целого.
 */
#    define AE_SINTPTR_T_MIN AE_S32_T_MIN

/**
 * @def AE_SINTPTR_T_MAX
 * @brief Макрос для определения максимального значения знакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот макрос задает максимальное значение, которое может принимать знаковый указатель,
 * соответствующее максимальному значению знакового целого.
 */
#    define AE_SINTPTR_T_MAX AE_S32_T_MAX

/**
 * @def AE_UINTPTR_T_MIN
 * @brief Макрос для определения минимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот макрос задает минимальное значение, которое может принимать беззнаковый указатель,
 * обычно это ноль, соответствующий минимальному значению беззнакового целого.
 */
#    define AE_UINTPTR_T_MIN AE_U32_T_MIN

/**
 * @def AE_UINTPTR_T_MAX
 * @brief Макрос для определения максимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот макрос задает максимальное значение, которое может принимать беззнаковый указатель,
 * соответствующее максимальному значению беззнакового целого.
 */
#    define AE_UINTPTR_T_MAX AE_U32_T_MAX

/**
 * @typedef ae_sintptr_t
 * @brief Определение типа для знакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот тип определен для абстракции операций арифметики знаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_s32_t ae_sintptr_t;

/**
 * @typedef ae_uintptr_t
 * @brief Определение типа для беззнакового типа указателя.
 *        Предполагается размер указателя 32 бита.
 *
 * Этот тип определен для абстракции операций арифметики беззнаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_u32_t ae_uintptr_t;

#elif AE_INTPTR_T_SIZE == 2
/**
 * @def AE_SINTPTR_T_MIN
 * @brief Макрос для определения минимального значения знакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот макрос задает минимальное значение, которое может принимать знаковый указатель,
 * соответствующее минимальному значению знакового целого.
 */
#    define AE_SINTPTR_T_MIN AE_S16_T_MIN

/**
 * @def AE_SINTPTR_T_MAX
 * @brief Макрос для определения максимального значения знакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот макрос задает максимальное значение, которое может принимать знаковый указатель,
 * соответствующее максимальному значению знакового целого.
 */
#    define AE_SINTPTR_T_MAX AE_S16_T_MAX

/**
 * @def AE_UINTPTR_T_MIN
 * @brief Макрос для определения минимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот макрос задает минимальное значение, которое может принимать беззнаковый указатель,
 * обычно это ноль, соответствующий минимальному значению беззнакового целого.
 */
#    define AE_UINTPTR_T_MIN AE_U16_T_MIN

/**
 * @def AE_UINTPTR_T_MAX
 * @brief Макрос для определения максимального значения беззнакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот макрос задает максимальное значение, которое может принимать беззнаковый указатель,
 * соответствующее максимальному значению беззнакового целого.
 */
#    define AE_UINTPTR_T_MAX AE_U16_T_MAX

/**
 * @typedef ae_sintptr_t
 * @brief Определение типа для знакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот тип определен для абстракции операций арифметики знаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_s16_t ae_sintptr_t;

/**
 * @typedef ae_uintptr_t
 * @brief Определение типа для беззнакового типа указателя.
 *        Предполагается размер указателя 16 бит.
 *
 * Этот тип определен для абстракции операций арифметики беззнаковых указателей
 * на различных системных архитектурах.
 */
typedef ae_u16_t ae_uintptr_t;

#else
#    error "Unsupported pointer size, please check AE_INTPTR_T_SIZE define value"
#endif

#endif // AE_INTPTR_H
