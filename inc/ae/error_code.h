/**
 * @file error_code.h
 * @brief Заголовочный файл для определения типа `ae_error_code_t`
 *        и связанных с ним макросов.
 *
 * Этот файл предоставляет определение типа `ae_error_code_t`,
 * используемого для представления кодов ошибок, возвращаемых функциями,
 * а также макросов, связанных с его диапазоном и размером.
 *
 * Файл служит основой для унифицированной обработки кодов ошибок,
 * позволяя разработчикам использовать стандартизированные значения
 * для обозначения ошибок и успешных состояний.
 */

#ifndef AE_ERROR_CODE_H
#define AE_ERROR_CODE_H

#include "return.h"

/**
 * @def AE_ERROR_CODE_T_SIZE
 * @brief Размер типа `ae_error_code_t` в байтах.
 *
 * Макрос `AE_ERROR_CODE_T_SIZE` определяет размер (в байтах) типа `ae_error_code_t`,
 * используя значение, установленное для `AE_RETURN_T_SIZE`.
 */
#define AE_ERROR_CODE_T_SIZE AE_RETURN_T_SIZE

/**
 * @def AE_ERROR_CODE_T_MIN
 * @brief Минимальное значение, которое может принимать `ae_error_code_t`.
 *
 * Макрос `AE_ERROR_CODE_T_MIN` определяет минимально возможное значение
 * для типа `ae_error_code_t`, используя значение `AE_RETURN_T_MIN`.
 */
#define AE_ERROR_CODE_T_MIN AE_RETURN_T_MIN

/**
 * @def AE_ERROR_CODE_T_MAX
 * @brief Максимальное значение, которое может принимать `ae_error_code_t`.
 *
 * Макрос `AE_ERROR_CODE_T_MAX` определяет максимально возможное значение
 * для типа `ae_error_code_t`, используя значение `AE_RETURN_T_MAX`.
 */
#define AE_ERROR_CODE_T_MAX AE_RETURN_T_MAX

/**
 * @def AE_ERROR_CODE_NONE
 * @brief Код, указывающий на отсутствие ошибки.
 *
 * Макрос `AE_ERROR_CODE_NONE` представляет собой значение 0,
 * указывающее на успешное выполнение или отсутствие ошибки.
 *
 * Используется в функциях, возвращающих `ae_error_code_t`,
 * чтобы обозначить отсутствие ошибок.
 */
#define AE_ERROR_CODE_NONE 0

/**
 * @typedef ae_error_code_t
 * @brief Определяет тип кода ошибки для функций.
 *
 * Тип `ae_error_code_t` представляет собой псевдоним для `ae_return_t` и используется
 * для обозначения кодов ошибок, возвращаемых функциями. Коды ошибок позволяют
 * легко определять и обрабатывать ситуации, когда выполнение функции
 * завершилось с ошибкой.
 *
 * Положительные значения `ae_error_code_t` могут указывать на успешное выполнение
 * функции или различные состояния успешного завершения, в то время как
 * отрицательные значения служат для обозначения специфических ошибок.
 */
typedef ae_return_t ae_error_code_t;

#endif // AE_ERROR_CODE_H
