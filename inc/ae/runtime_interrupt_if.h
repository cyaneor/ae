/**
 * @file runtime_interrupt_if.h
 * @brief Заголовочный файл для макросов,
 *        связанных с прерыванием выполнения функции при ошибках.
 *
 * Этот файл содержит несколько макросов для обработки ошибок,
 * которые позволяют прерывать выполнение функции,
 * если код ошибки соответствует или не соответствует заданному значению.
 *
 * Макросы используют код ошибки, получаемый с помощью функции `ae_error_get_code`,
 * и могут вызывать макрос `ae_runtime_interrupt` для немедленного выхода
 * из функции с заданным значением.
 *
 * Макросы в этом файле:
 * - `AE_RUNTIME_INTERRUPT_IF_ERROR`:
 *    Прерывает выполнение, если код ошибки соответствует заданному значению.
 * - `AE_RUNTIME_INTERRUPT_IF_NOT_ERROR`:
 *    Прерывает выполнение, если код ошибки не соответствует заданному значению.
 * - `AE_RUNTIME_INTERRUPT_IF_ANY_ERROR`:
 *    Прерывает выполнение при любой ошибке, кроме `AE_RUNTIME_ERROR_OK`.
 *
 * @note Все макросы должны использоваться с осторожностью,
 *       чтобы избежать излишней сложности кода.
 *
 *       Они полезны для обработки ошибок или реализации
 *       ранних выходов из функции в зависимости от значения кода ошибки.
 *
 * @see runtime_error.h
 * @see runtime_interrupt.h
 * @see runtime_error_code.h
 */

#ifndef AE_RUNTIME_INTERRUPT_IF_H
#define AE_RUNTIME_INTERRUPT_IF_H

#include "runtime_error.h"
#include "runtime_interrupt.h"
#include "runtime_error_code.h"

/**
 * @def AE_RUNTIME_INTERRUPT_IF_ERROR
 * @brief Прерывание выполнения функции,
 *        если код ошибки соответствует заданному значению.
 *
 * Этот макрос выполняет проверку кода ошибки, полученного с помощью
 * функции `ae_error_get_code`, и если он соответствует переданному
 * значению `error_code`, то вызывает макрос `ae_runtime_interrupt`
 * с переданными аргументами.
 *
 * @param error_code Код ошибки, с которым выполняется сравнение.
 * @param ... Аргументы, которые будут переданы в макрос `ae_runtime_interrupt`
 *            для немедленного завершения выполнения функции с заданным значением.
 *
 * @note Использование этого макроса следует ограничить ситуациями,
 *       когда нужно немедленно завершить выполнение функции в случае ошибки,
 *       не продолжая выполнение кода.
 *
 *       Он может быть полезен в обработчиках ошибок или в случае,
 *       когда нужно прервать выполнение функции на основе определённого кода ошибки.
 */
#define AE_RUNTIME_INTERRUPT_IF_ERROR(error_code, ...)                                             \
    if (ae_error_get_code(ae_runtime_error()) == error_code)                                       \
    {                                                                                              \
        ae_runtime_interrupt(__VA_ARGS__);                                                         \
    }

/**
 * @def AE_RUNTIME_INTERRUPT_IF_NOT_ERROR
 * @brief Прерывание выполнения функции,
 *        если код ошибки не соответствует заданному значению.
 *
 * Этот макрос выполняет проверку кода ошибки, полученного с помощью функции
 * `ae_error_get_code`, и если он не соответствует переданному значению `error_code`,
 * то вызывает макрос `ae_runtime_interrupt` с переданными аргументами для немедленного выхода
 * из функции с указанным значением.
 *
 * @param error_code Код ошибки, с которым выполняется сравнение.
 * @param ... Аргументы, которые будут переданы в макрос `ae_runtime_interrupt`
 *            для немедленного завершения выполнения функции с заданным значением.
 *
 * @note Использование этого макроса следует ограничить ситуациями, когда необходимо прервать
 *       выполнение функции в случае отсутствия ошибки (когда код ошибки отличается от заданного).
 *       Это может быть полезно для ранних выходов в случаях, когда выполнение функции не должно
 *       продолжаться из-за определённого состояния или при реализации обработчиков ошибок.
 */
#define AE_RUNTIME_INTERRUPT_IF_NOT_ERROR(error_code, ...)                                         \
    if (ae_error_get_code(ae_runtime_error()) != error_code)                                       \
    {                                                                                              \
        ae_runtime_interrupt(__VA_ARGS__);                                                         \
    }

/**
 * @def AE_RUNTIME_INTERRUPT_IF_ANY_ERROR
 * @brief Прерывание выполнения функции,
 *        если код ошибки не равен AE_RUNTIME_ERROR_OK.
 *
 * Этот макрос вызывает макрос `AE_RUNTIME_INTERRUPT_IF_NOT_ERROR`,
 * передавая ему код ошибки `AE_RUNTIME_ERROR_OK`, что означает,
 * что выполнение будет прервано, если текущий код ошибки отличается от `AE_RUNTIME_ERROR_OK`.
 * Это позволяет прервать выполнение функции при любом состоянии ошибки, отличном от "OK".
 *
 * @param ... Аргументы, которые будут переданы в макрос `AE_RUNTIME_INTERRUPT_IF_NOT_ERROR`,
 *            а следовательно и в макрос `ae_runtime_interrupt` для немедленного завершения
 *            выполнения функции с заданным значением.
 *
 * @note Этот макрос полезен для обработки всех ошибок, за исключением случая,
 *       когда код ошибки равен `AE_RUNTIME_ERROR_OK`. Он может быть использован для того,
 *       чтобы немедленно прервать выполнение функции в случае возникновения любой ошибки.
 */
#define AE_RUNTIME_INTERRUPT_IF_ANY_ERROR(...)                                                     \
    AE_RUNTIME_INTERRUPT_IF_NOT_ERROR(AE_RUNTIME_ERROR_OK, __VA_ARGS__)

#endif // AE_RUNTIME_INTERRUPT_IF_H