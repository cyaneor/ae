/**
 * @file runtime_error_code.h
 * @brief Заголовочный файл, определяющий коды ошибок времени выполнения.
 *
 * Этот файл содержит перечисление кодов ошибок,
 * которые могут возникнуть в процессе выполнения библиотеки.
 *
 * Коды ошибок используются для обнаружения и обработки исключительных ситуаций,
 * связанных с неправильным использованием функций или некорректными данными.
 *
 * Каждый код ошибки сопровождается соответствующим описанием,
 * что позволяет разработчикам быстро идентифицировать и исправлять ошибки.
 */

#ifndef AE_RUNTIME_ERROR_CODE_H
#define AE_RUNTIME_ERROR_CODE_H

#include "error_code.h"

/**
 * @typedef ae_runtime_error_code_t
 * @brief Перечисление, определяющее коды ошибок времени выполнения.
 *
 * Это перечисление содержит коды ошибок,
 * которые могут возникнуть в процессе выполнения программы.
 * Коды ошибок помогают обнаружить и корректно обработать исключительные ситуации.
 */
typedef enum ae_runtime_error_code
{
    /**
     * @brief Ошибка отсутствует.
     *
     * Значение указывает на нормальное завершение операции без ошибок.
     * Это значение эквивалентно AE_ERROR_CODE_NONE.
     */
    AE_RUNTIME_ERROR_OK = AE_ERROR_CODE_NONE,

    /**
     * @brief Ошибка времени выполнения: нулевой указатель.
     *
     * Данное значение указывает на то, что была попытка использовать
     * нулевой указатель в операции, где это недопустимо.
     */
    AE_RUNTIME_ERROR_NULL_POINTER,
    
    /**
     * @brief Ошибка недопустимого аргумента.
     *
     * Возникает при передаче аргумента, значение которого выходит
     * за допустимые пределы или не соответствует требованиям функции.
     * Проверьте корректность передаваемых параметров.
     */
    AE_RUNTIME_ERROR_INVALID_ARGUMENT,

    /**
     * @brief Ошибка недопустимого выравнивания.
     *
     * Возникает при попытке выполнить операцию с данными, выравнивание которых
     * не соответствует требованиям платформы или аппаратного обеспечения.
     * Проверьте корректность выравнивания данных в памяти.
     */
    AE_RUNTIME_ERROR_INVALID_ALIGNMENT,

    /**
     * @brief Ошибка: размер памяти равен нулю.
     *
     * Возникает при попытке выделить память нулевого размера
     * или выполнить операцию, требующую ненулевого размера памяти.
     *
     * @note Размер запрашиваемой памяти должен быть больше нуля.
     */
    AE_RUNTIME_ERROR_ZERO_MEMORY_SIZE,

    /**
     * @brief Ошибка: нулевое выравнивание.
     *
     * Возникает, когда попытка выделить или работать с памятью с выравниванием, равным нулю.
     * Это недопустимо, поскольку выравнивание памяти должно быть положительным числом,
     * соответствующим архитектурным требованиям.
     *
     * @note Память должна быть выровнена на границу,
     *       соответствующую ее типу или архитектуре.
     */
    AE_RUNTIME_ERROR_ZERO_ALIGNMENT_SIZE,

    /**
     * @brief Ошибка: значение не является степенью двойки.
     *
     * Возникает в случаях, когда требуется значение, являющееся степенью двойки,
     * но предоставленное значение этому требованию не соответствует.
     */
    AE_RUNTIME_ERROR_NOT_POWER_OF_TWO,

    /**
     * @brief Ошибка: память не была выделена.
     *
     * Возникает при попытке работы с памятью, которая не была корректно
     * выделена или была освобождена ранее.
     */
    AE_RUNTIME_ERROR_MEMORY_NOT_ALLOCATED,

    /**
     * @brief Ошибка недопустимого диапазона памяти.
     *
     * Возникает при попытке доступа к области памяти,
     * которая не разрешена для чтения или записи.
     *
     * Это может произойти из-за неправильного указателя,
     * выхода за пределы выделенной памяти или других ошибок управления памятью.
     */
    AE_RUNTIME_ERROR_INVALID_MEMORY_RANGE,

    /**
     * @brief Ошибка недопустимого поддиапазона памяти.
     *
     * Возникает при попытке создать поддиапазон памяти,
     * который не является допустимым.
     *
     * Это может произойти, если переданные границы поддиапазона (begin, end)
     * не входят в допустимый диапазон памяти.
     */
    AE_RUNTIME_ERROR_INVALID_MEMORY_SUBRANGE,

    /**
     * @brief Ошибка недопустимого блока памяти.
     *
     * Возникает при попытке работы с блоком памяти,
     * который является недействительным или некорректным.
     *
     * Эта ошибка может быть вызвана несколькими причинами,
     * такими как:
     *
     * - Неверно переданный указатель на блок памяти (например, `nullptr`).
     * - Блок памяти, не соответствующий требуемым условиям
     *   для выполнения операций с ним (например, размер не кратен элементу).
     * - Попытка использования блока памяти, который был освобожден или поврежден.
     *
     * Возникновение этой ошибки может свидетельствовать о проблемах с управлением памятью,
     * таких как выход за пределы выделенного блока или использование поврежденных данных.
     */
    AE_RUNTIME_ERROR_INVALID_MEMORY_BLOCK,

    /**
     * @brief Ошибка: превышение максимального размера.
     *
     * Возникает при попытке выделить память, размер которой превышает
     * максимально допустимый размер для данного блока памяти.
     */
    AE_RUNTIME_ERROR_EXCEEDS_MAX_SIZE,

    /**
     * @brief Ошибка выхода за пределы диапазона.
     *
     * Возникает при попытке доступа к элементу
     * за пределами допустимого диапазона значений или индексов.
     */
    AE_RUNTIME_ERROR_OUT_OF_RANGE,

    /**
     * @brief Ошибка недопустимого индекса.
     *
     * Возникает при попытке обратиться к элементу по индексу,
     * который выходит за пределы допустимого диапазона.
     */
    AE_RUNTIME_ERROR_INVALID_INDEX,

    /**
     * @brief Ошибка нулевого размера элемента.
     *
     * Возникает при попытке выполнить операцию с элементом, размер
     * которого равен нулю. Размер элемента должен быть положительным числом.
     */
    AE_RUNTIME_ERROR_ZERO_ELEMENT_SIZE,

    /**
     * @brief Ошибка отсутствия нулевого терминирующего символа.
     *
     * Возникает, когда строка или буфер данных, который должен быть завершающим нулевым символом
     * (например, в C-строке), не содержит нулевого символа в конце. Это может привести к ошибкам
     * при работе с строками или буферами, так как функции обработки строк (например, strlen,
     * strcpy, и другие) могут продолжать чтение за пределы буфера.
     *
     * @note Все строки в стиле C должны завершаться нулевым символом ('\0')
     *       для корректной обработки.
     */
    AE_RUNTIME_ERROR_NO_NULL_TERMINATOR,

    /**
     * @brief Ошибка: различие размеров элементов.
     *
     * Возникает при несоответствии размеров элементов в операциях,
     * требующих одинаковых размеров (например, при копировании или сравнении).
     */
    AE_RUNTIME_ERROR_DIFFERENT_ELEMENT_SIZE,

    /**
     * @brief Ошибка: функция выделения памяти не инициализирована.
     *
     * Возникает при попытке использовать неинициализированную функцию
     * выделения памяти. Убедитесь, что аллокатор правильно настроен.
     */
    AE_RUNTIME_ERROR_ALLOCATOR_FUNCTION_NOT_INITIALIZED,

    /**
     * @brief Ошибка: функция освобождения памяти не инициализирована.
     *
     * Возникает при попытке использовать неинициализированную функцию
     * освобождения памяти. Убедитесь, что деаллокатор правильно настроен.
     */
    AE_RUNTIME_ERROR_DEALLOCATOR_FUNCTION_NOT_INITIALIZED
} ae_runtime_error_code_t;

#endif // AE_RUNTIME_ERROR_CODE_H
